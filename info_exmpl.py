"""
У Python існують як значимі типи даних (value types), так і посилальні типи даних
(reference types). Давайте розглянемо ці поняття більш детально:

Значимі типи даних (value types): У Python існують кілька вбудованих значимих типів даних,
таких як числа (integers, floats), рядки (strings), булеві значення (booleans) і
кортежі (tuples). Значимі типи даних передаються за значенням, що означає, що при присвоєнні
нової змінної копіюється саме значення, а не посилання на нього. Якщо змінити копію,
оригінальна змінна не зміниться.

Наприклад:
"""
x = 5
y = x
y = 10
print(x)  # Виведе: 5

"""
Посилальні типи даних (reference types): Посилальні типи даних включають списки (lists), 
словники (dictionaries), множини (sets) та інші змінні об'єктного типу. При присвоєнні 
посилальних типів даних передається посилання на об'єкт, а не саме значення. Якщо змінити 
об'єкт через одну змінну, зміни також відобразяться в інших змінних, які посилаються на цей об'єкт.

Наприклад:
"""
list1 = [1, 2, 3]
list2 = list1
list2.append(4)
print(list1)  # Виведе: [1, 2, 3, 4]


"""
Сбиральник сміття (garbage collector): Python використовує автоматичний сбиральник сміття для 
визначення і звільнення пам'яті, яка більше не використовується об'єктами. Коли жодна змінна не 
посилається на об'єкт, сбиральник сміття відповідає за звільнення пам'яті, зайнятої цим об'єктом.

У Python є вбудований модуль gc (garbage collector), який надає функції для контролю за сбиральником 
сміття, наприклад, для вимушеного виклику сборки сміття або отримання інформації про поточний 
стан сбиральника сміття.

Наприклад, для вимушеного виклику сборки сміття можна використовувати функцію gc.collect()
"""
import gc

# Викликати сборку сміття
gc.collect()
