"""
У Python існують як значимі типи даних (value types), так і посилальні типи даних (reference types).
Давайте розглянемо ці поняття більш детально:
"""
input("У Python існують як значимі типи даних (value types), так і посилальні типи даних (reference types).\n"
      "Давайте розглянемо ці поняття більш детально:\n"
      "\n...Натисніть будь-яку кнопку...\n")

"""
Значимі типи даних (value types): У Python існують кілька вбудованих значимих типів даних, таких як 
числа (integers, floats), рядки (strings), булеві значення (booleans) і кортежі (tuples). 
"""
input("Значимі типи даних (value types): У Python існують кілька вбудованих значимих типів даних, таких\n"
      "як числа (integers, floats), рядки (strings), булеві значення (booleans) і кортежі (tuples).\n"
      "\n...Натисніть будь-яку кнопку...\n")

"""
Значимі типи даних передаються за значенням, що означає, що при присвоєнні нової змінної копіюється саме 
значення, а не посилання на нього. Якщо змінити копію, оригінальна змінна не зміниться.
"""
input("Значимі типи даних передаються за значенням, що означає, що при присвоєнні нової змінної копіюється\n"
      "саме значення, а не посилання на нього. Якщо змінити копію, оригінальна змінна не зміниться.\n\n"
      "Наприклад:\n\n"
      "x = 5\n"
      "y = x\n"
      "y = 10\n"
      "print(x) : 5\n"
      "\n...Натисніть будь-яку кнопку...\n")

"""
Посилальні типи даних (reference types): Посилальні типи даних включають списки (lists), словники 
(dictionaries), множини (sets) та інші змінні об'єктного типу. При присвоєнні посилальних типів 
даних передається посилання на об'єкт, а не саме значення. Якщо змінити об'єкт через одну змінну, 
зміни також відобразяться в інших змінних, які посилаються на цей об'єкт.
"""
input("Посилальні типи даних (reference types): Посилальні типи даних включають списки (lists),\n"
      "словники (dictionaries), множини (sets) та інші змінні об'єктного типу. При присвоєнні\n"
      "посилальних типів даних передається посилання на об'єкт, а не саме значення. Якщо змінити\n"
      "об'єкт через одну змінну, зміни також відобразяться в інших змінних,\n"
      "які посилаються на цей об'єкт.\n\n"
      "Наприклад:\n\n"
      "list1 = [1, 2, 3]\n"
      "list2 = list1\n"
      "list2.append(4)\n"
      "print(list1) : [1, 2, 3, 4]\n"
      "\n...Натисніть будь-яку кнопку...\n")

"""
Сбиральник сміття (garbage collector): Python використовує автоматичний сбиральник сміття для 
визначення і звільнення пам'яті, яка більше не використовується об'єктами. Коли жодна змінна не 
посилається на об'єкт, сбиральник сміття відповідає за звільнення пам'яті, зайнятої цим об'єктом.

У Python є вбудований модуль gc (garbage collector), який надає функції для контролю за сбиральником
сміття, наприклад, для вимушеного виклику сборки сміття або отримання інформації про поточний 
стан сбиральника сміття.

Наприклад, для вимушеного виклику сборки сміття можна використовувати функцію gc.collect():
"""
input("Сбиральник сміття (garbage collector): Python використовує автоматичний сбиральник сміття для визначення\n"
      "і звільнення пам'яті, яка більше не використовується об'єктами. Коли жодна змінна не посилається на об'єкт,\n"
      "сбиральник сміття відповідає за звільнення пам'яті, зайнятої цим об'єктом.\n\n"
      "У Python є вбудований модуль gc (garbage collector), який надає функції для контролю за\n"
      "сбиральником сміття, наприклад, для вимушеного виклику сборки сміття або отримання\n"
      "інформації про поточний стан сбиральника сміття.\n\n"
      "Наприклад, для вимушеного виклику сборки сміття можна використовувати функцію gc.collect():\n\n"
      "import gc\n"
      "# Зібрати сміття\n"
      "gc.collect()\n"
      "\n...Натисніть будь-яку кнопку...\n")

"""
Загалом, Python має як значимі, так і посилальні типи даних, а також використовує сбиральник сміття для 
автоматичного вивільнення пам'яті, зайнятої не використовуваними об'єктами.
"""
input("Загалом, Python має як значимі, так і посилальні типи даних, а також використовує сбиральник сміття для\n"
      "автоматичного вивільнення пам'яті, зайнятої не використовуваними об'єктами.\n"
      "\n...Натисніть будь-яку кнопку...\n")




